{"version":3,"sources":["Spinner.svg","Config.js","helpers/mediaQueries.js","components/Searchbar.js","components/Navbar.js","components/Background.js","components/StarRating.js","components/MoviePoster.js","components/Spinner.js","containers/MovieList.js","pages/Home.js","components/MovieCard.js","pages/Movie.js","reducer.js","App.js","index.js"],"names":["module","exports","TMDB_URL","API_KEY","IMAGE_URL","sizes","breakpoint","sm","md","lg","xl","SearchBar","styled","div","SearchIcon","MdSearch","SearchInput","input","Searchbar","state","dispatch","useEffect","a","searchQuery","fetch","then","result","json","type","payload","fetchMovies","onChange","e","target","value","Header","Title","Navbar","console","log","to","HeroHeader","props","image","Description","Background","title","overview","Star","BsStarFill","HalfStar","BsStarHalf","BlankStar","BsStar","Rating","justifyContent","StarRating","rating","useState","stars","setStars","array","i","push","map","star","key","Details","Poster","Overview","Image","img","MoviePoster","movie","history","useHistory","onClick","path","id","src","poster_path","vote_average","LoadingContainer","Spinner","require","MoviesContainer","Container","MovieList","data","loading","movies","Home","backgroundImage","backdrop_path","Card","LeftCard","RightCard","Genres","li","Genre","last","ShortInfo","Wrapper","size","Backdrop","p","h1","MovieCard","poster","backdrop","release_date","runtime","genres","genre","length","name","production_companies","company","logo_path","credits","cast","filter","actor","profile_path","circle","Movie","useParams","setMovie","setLoading","reducer","action","results","totalPages","total_pages","actualPage","page","MoviesContext","createContext","App","useReducer","Provider","className","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3170157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spinner.debdfb8b.svg\";","export const TMDB_URL = \"https://api.themoviedb.org/3/\";\r\nexport const API_KEY = \"1a65d41cd57fab7537d17820063e63df\";\r\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/\";\r\nexport const BACKDROP_SIZE = \"w1280_and_h720_bestv2\";\r\nexport const POSTER_SIZE = \"w185_and_h278_bestv2\";\r\nexport const MOVIE_CARD_SIZE = \"w342\"\r\nexport const LOGO_SIZE = \"w92\";\r\nexport const PROFILE_SIZE = \"w45\"\r\n","const sizes = {\r\n    sm: \"576px\",\r\n    md: \"768px\",\r\n    lg: \"992px\",\r\n    xl: \"1200px\"\r\n  };\r\n  export const breakpoint = {\r\n    sm: `(max-width: ${sizes.sm})`,\r\n    md: `(max-width: ${sizes.md})`,\r\n    lg: `(max-width: ${sizes.lg})`,\r\n    xl: `(max-width: ${sizes.xl})`,\r\n  };","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdSearch } from \"react-icons/md\";\r\nimport { TMDB_URL, API_KEY } from \"../Config\";\r\nimport {breakpoint} from \"../helpers/mediaQueries\";\r\n\r\nconst SearchBar = styled.div`\r\n  background: rgba(150, 150, 150, 0.8);\r\n  height: 40px;\r\n  border-radius: 40px;\r\n  padding: 10px;\r\n  :hover > input {\r\n    width: 210px;\r\n    @media ${breakpoint.sm}{\r\n      width:130px;\r\n    }\r\n  }\r\n`;\r\nconst SearchIcon = styled(MdSearch)`\r\n  float: right;\r\n  color: black;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst SearchInput = styled.input`\r\n  :focus {\r\n    width: 210px;\r\n    @media ${breakpoint.sm}{\r\n      width:130px;\r\n    }\r\n  }\r\n  border: none;\r\n  outline: none;\r\n  cursor: text;\r\n  padding: 0px;\r\n  background: none;\r\n  color: black;\r\n  font-size: 30px;\r\n  line-height: 40px;\r\n  transition: width 0.4s;\r\n  width: 0px;\r\n`;\r\n\r\nconst Searchbar = ({state,dispatch}) => {\r\n  \r\n  \r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      if(state.searchQuery !== \"\"){\r\n      fetch(`${TMDB_URL}search/movie?api_key=${API_KEY}&query=${state.searchQuery}`)\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n            dispatch({\r\n              type: \"SEARCH_MOVIES\",\r\n              payload: result,\r\n            });\r\n        });\r\n      }\r\n    };\r\n    fetchMovies();\r\n  }, [state.searchQuery]);\r\n  return (\r\n    <SearchBar>\r\n      <SearchInput onChange={(e) =>  dispatch({\r\n        type: \"MOVIES_REQUEST\",\r\n        payload: e.target.value\r\n      })} />\r\n      <SearchIcon />\r\n    </SearchBar>\r\n  );\r\n};\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { breakpoint } from \"../helpers/mediaQueries\";\r\n\r\nconst Header = styled.div`\r\n  position: sticky;\r\n  top: 0px;\r\n  left: 0px;\r\n  z-index: 3;\r\n  background: black;\r\n  color: white;\r\n  box-sizing: border-box;\r\n  height: 10vh;\r\n  font-size: 30px;\r\n  padding-left: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n@media ${breakpoint.sm}{\r\n  font-size:24px;\r\n}\r\n  a {\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst Navbar = ({ state, dispatch }) => {\r\n  console.log(\"state\", state);\r\n  return (\r\n    <Header>\r\n      <Title>\r\n        <Link to=\"/\">Movie Finder</Link>\r\n      </Title>\r\n      <div>\r\n        <Searchbar state={state} dispatch={dispatch} />\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {breakpoint} from \"../helpers/mediaQueries\";\r\n\r\nconst HeroHeader = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  background-size: 100%, cover !important;\r\n  background-position: 50%, 50% !important;\r\n  width: 100%;\r\n  height: 70vh;\r\n  position: relative;\r\n  color: white;\r\n  background: linear-gradient(\r\n      rgba(0, 0, 0, 0) 39%,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${(props) => props.image}), rgb(28, 28, 28);\r\n  h1 {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  background: rgba(0, 0, 0, 0.6);\r\n  padding: 10px 30px;\r\n  @media ${breakpoint.sm}{\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n  }\r\n  div {\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst Background = ({ image, title, overview }) => {\r\n  return (\r\n    <HeroHeader image={image}>\r\n      <Description>\r\n        <h1>{title}</h1>\r\n        <div>{overview}</div>\r\n      </Description>\r\n    </HeroHeader>\r\n  );\r\n};\r\nexport default Background;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BsStar, BsStarFill, BsStarHalf } from \"react-icons/bs\";\r\n\r\nconst Star = styled(BsStarFill)`\r\n  padding: 1px;\r\n  color: yellow;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst HalfStar = styled(BsStarHalf)`\r\n  padding: 1px;\r\n  color: yellow;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst BlankStar = styled(BsStar)`\r\n  padding: 1px;\r\n  color: yellow;\r\n  font-size: 24px;\r\n`;\r\nconst Rating = styled.div`\r\n  display: flex;\r\n  justify-content: ${props => props.justifyContent || \"center\"};\r\n  align-items: center;\r\n`;\r\nconst StarRating = ({ justifyContent, rating }) => {\r\n  const [stars, setStars] = useState([]);\r\n  const maxStars = 5;\r\n  useEffect(() => {\r\n    const array = [];\r\n    for (let i = 0; i < maxStars; i++) {\r\n      if (rating >= 2) {\r\n        array.push(<Star />);\r\n      } else if (rating > 1 && rating < 2) {\r\n        array.push(<HalfStar />);\r\n      } else array.push(<BlankStar />);\r\n      rating -= 2;\r\n    }\r\n    setStars(array);\r\n  }, [rating]);\r\n  return (\r\n    <Rating justifyContent={justifyContent}>\r\n      <div>\r\n        {stars.map((star, i) => (\r\n          <span key={i}>{star}</span>\r\n        ))}\r\n      </div>\r\n    </Rating>\r\n  );\r\n};\r\n\r\nexport default StarRating;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { IMAGE_URL, POSTER_SIZE } from \"../Config\";\r\nimport StarRating from \"./StarRating\";\r\n\r\nconst Details = styled.div`\r\n  position: absolute;\r\n  bottom: -57%;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 84%;\r\n  color: #fff;\r\n  z-index: 2;\r\n  transition: all 0.4s;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  margin: 20px;\r\n  cursor: pointer;\r\n  background: white;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-shadow: 0px 5px 10x rgba(0, 0, 0);\r\n  :hover:before {\r\n    bottom: 0px;\r\n  }\r\n  :hover ${Details} {\r\n    bottom: 0px;\r\n  }\r\n  :hover img {\r\n    filter: blur(5px);\r\n  }\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -57%;\r\n    overflow: hidden;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 84%;\r\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.8) 90%, transparent);\r\n    transition: all 0.4s;\r\n    z-index: 1;\r\n  }\r\n`;\r\nconst Header = styled.div`\r\n  height: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-weight: bold;\r\n  font-size: 13px;\r\n`;\r\nconst Overview = styled.div`\r\n  font-size: 13px;\r\n  text-align: left;\r\n  padding: 0px 7px;\r\n`;\r\nconst Image = styled.img`\r\n  transition: all 0.4s;\r\n`;\r\n\r\nconst MoviePoster = ({ movie }) => {\r\n  const history = useHistory();\r\n\r\n  const pushTo = (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Poster onClick={() => pushTo(`/movie/${movie.id}`)}>\r\n      <div>\r\n        <Image src={`${IMAGE_URL + POSTER_SIZE + movie.poster_path}`} />\r\n      </div>\r\n      <Details>\r\n        <Header>\r\n          <Title>{movie.title}</Title>\r\n          <StarRating rating={movie.vote_average} />\r\n        </Header>\r\n        <Overview>{movie.overview}</Overview>\r\n      </Details>\r\n    </Poster>\r\n  );\r\n};\r\nexport default MoviePoster;\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst LoadingContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Spinner = () =>{\r\n    return(\r\n<LoadingContainer>\r\n<img src={require('../Spinner.svg')} />\r\n</LoadingContainer>\r\n    )\r\n}\r\nexport default Spinner","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MoviePoster from \"../components/MoviePoster\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst MoviesContainer = styled.div`\r\n  background: #333231;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  min-height: 200px;\r\n  justify-content: center;\r\n  padding: 0px 15px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  background: #333231;\r\n`;\r\n\r\nconst MovieList = ({ data }) => {\r\n  console.log(\"load\", data.loading, data.movies);\r\n  return (\r\n    <Container>\r\n      {data.loading && data.searchQuery !==\"\" ? (\r\n        <MoviesContainer>\r\n          <Spinner />\r\n        </MoviesContainer>\r\n      ) : (\r\n        <MoviesContainer>\r\n          {data.movies?.map((movie, i) =>\r\n            movie.poster_path ? <MoviePoster key={i} movie={movie} /> : null\r\n          )}\r\n        </MoviesContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default MovieList;\r\n","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport { TMDB_URL, IMAGE_URL, API_KEY, BACKDROP_SIZE } from \"../Config\";\r\nimport Background from \"../components/Background\";\r\nimport MovieList from \"../containers/MovieList\";\r\n\r\nconst Home = ({ data, dispatch }) => {\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      dispatch({\r\n        type: \"MOVIES_REQUEST\",\r\n        payload: \"\",\r\n      });\r\n      \r\n      fetch(`${TMDB_URL}movie/popular?api_key=${API_KEY}&page=1`)\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          dispatch({\r\n            type: \"DISPLAY_POPULAR_MOVIES\",\r\n            payload: result,\r\n          });\r\n        });\r\n    };\r\n    fetchMovies();\r\n  },[]);\r\n  console.log(\"home\", data);\r\n  return (\r\n    <div>\r\n      <Background\r\n        image={`${\r\n          IMAGE_URL + BACKDROP_SIZE + data.backgroundImage.backdrop_path\r\n        }`}\r\n        title={data.backgroundImage.title}\r\n        overview={data.backgroundImage.overview}\r\n      />\r\n      <MovieList data={data} />\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport StarRating from \"./StarRating\";\r\nimport Spinner from \"./Spinner\";\r\nimport { IMAGE_URL, LOGO_SIZE, PROFILE_SIZE } from \"../Config\";\r\nimport { breakpoint } from \"../helpers/mediaQueries\";\r\n\r\nconst Card = styled.div`\r\n  width: 100%;\r\n  height: 90vh;\r\n  background: #333231;\r\n  display: flex;\r\n  box-shadow: 0px 20px 30px 3px rgba(0, 0, 0, 0.55);\r\n  @media ${breakpoint.md} {\r\n    flex-direction: column;\r\n    height: auto;\r\n  }\r\n`;\r\nconst LeftCard = styled.div`\r\n  width: 400px;\r\n  height: 100% !important;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  background: transarent;\r\n  @media ${breakpoint.md} {\r\n    width: 100%;\r\n    height: 500px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\nconst RightCard = styled.div`\r\n  width: calc(100% - 300px);\r\n  background: #333231;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 0px 40px; \r\n  @media ${breakpoint.md} {\r\n    width: 100%;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\nconst Genres = styled.li`\r\n  display: flex;\r\n`;\r\nconst Genre = styled.div`\r\n  display: inline-block;\r\n  padding: 7px;\r\n  border-right: ${(props) => (props.last ? \"none\" : \"1px solid white\")};\r\n`;\r\n\r\nconst ShortInfo = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  color: white;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 0px 5px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  margin: 5px;\r\n  max-height: 100px;\r\n  @media ${breakpoint.lg}{\r\n    max-height: ${props => props.size || \"100px\"}\r\n  }\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  height: 100% !important;\r\n\r\n  @media ${breakpoint.md} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Backdrop = styled.img`\r\n  display: none;\r\n  @media ${breakpoint.md} {\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100% !important;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.p`\r\ncolor: white;\r\nfont-family: \"Montserrat\", sans-serif;\r\nfont-size: 18px;\r\nletter-spacing: 1px;\r\nmargin: 10px 0 10px 0;\r\ntext-align: left;\r\n@media ${breakpoint.lg} {\r\n  font-size: 15px;\r\n}\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 400;\r\n  text-align: left;\r\n  font-size: 40px;\r\n  margin: 30px 0 0 0;\r\n  letter-spacing: 1px;\r\n  @media ${breakpoint.lg}{\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nconst MovieCard = ({ loading, poster, backdrop, movie }) => {\r\n  console.log(\"mff\", movie);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Card>\r\n          <Spinner />\r\n        </Card>\r\n      ) : (\r\n        <Card>\r\n          <LeftCard>\r\n            <Poster src={poster} />\r\n            <Backdrop src={backdrop} />\r\n          </LeftCard>\r\n          <RightCard>\r\n            {\" \"}\r\n            <Title>{movie.title}</Title>\r\n            <ShortInfo>\r\n              <div>{movie.release_date}</div>\r\n              <div>{movie.runtime} min</div>\r\n              <Genres>\r\n                {movie?.genres?.map((genre, i) => (\r\n                  <Genre last={i === movie.genres.length - 1 ? true : false}>\r\n                    {genre.name}{\" \"}\r\n                  </Genre>\r\n                ))}\r\n              </Genres>\r\n            </ShortInfo>\r\n            <StarRating\r\n              justifyContent=\"flex-start\"\r\n              rating={movie.vote_average}\r\n            />\r\n            <Overview>{movie.overview}</Overview>\r\n            <Wrapper>\r\n              {movie?.production_companies?.map((company, i) =>\r\n                company.logo_path ? (\r\n                  <Image\r\n                  size = {\"40px\"}\r\n                    key={i}\r\n                    src={`${IMAGE_URL + LOGO_SIZE + company.logo_path}`}\r\n                  />\r\n                ) : null\r\n              )}\r\n            </Wrapper>\r\n            <Wrapper>\r\n              {movie?.credits?.cast\r\n                ?.filter((actor, i) => {\r\n                  return i < 5 ? actor : null;\r\n                })\r\n                .map((actor, i) =>\r\n                  actor.profile_path ? (\r\n                    <Image\r\n                      key={i}\r\n                      circle\r\n                      src={`${IMAGE_URL + PROFILE_SIZE + actor.profile_path}`}\r\n                    />\r\n                  ) : null\r\n                )}\r\n            </Wrapper>\r\n          </RightCard>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MovieCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport { TMDB_URL, API_KEY, IMAGE_URL, MOVIE_CARD_SIZE,BACKDROP_SIZE } from \"../Config\";\r\n\r\nconst Movie = () => {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(\r\n      `${TMDB_URL}movie/${id}?api_key=${API_KEY}&append_to_response=credits`\r\n    )\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setMovie(result);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  console.log(\"m\", movie.backdrop_path);\r\n  return (\r\n    <div>\r\n        <MovieCard loading={loading} movie={movie} poster={`${IMAGE_URL + MOVIE_CARD_SIZE + movie.poster_path}`} backdrop={`${IMAGE_URL + BACKDROP_SIZE + movie.backdrop_path}`}/>\r\n    </div>\r\n  );\r\n};\r\nexport default Movie;\r\n","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"MOVIES_REQUEST\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          searchQuery: action.payload,\r\n        };\r\n      case \"SEARCH_MOVIES\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          movies: action.payload.results,\r\n          totalPages: action.payload.total_pages,\r\n        };\r\n      case \"DISPLAY_POPULAR_MOVIES\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          movies: action.payload.results,\r\n          actualPage: action.payload.page,\r\n          totalPages: action.payload.total_pages,\r\n          backgroundImage: action.payload.results[2],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, { useReducer, createContext } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Movie from \"./pages/Movie\";\nimport { reducer } from \"./reducer\";\nimport \"./App.css\";\n\nconst MoviesContext = createContext(null);\n\nconst App = () => {\n  const data = {\n    movies: [],\n    backgroundImage: \"\",\n    loading: false,\n    actualPage: 0,\n    totalPages: 0,\n    searchQuery: \"\",\n  };\n\n  const [state, dispatch] = useReducer(reducer, data);\n  return (\n    <MoviesContext.Provider value={dispatch}>\n      <div className=\"App\">\n        <Router>\n          <Navbar state={state} dispatch={dispatch} />\n          <Route exact path=\"/\">\n            <Home data={state} dispatch={dispatch} />\n          </Route>\n          <Route path=\"/movie/:id\">\n            <Movie />\n          </Route>\n        </Router>\n      </div>\n    </MoviesContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}